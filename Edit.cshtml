@model GestorSuministro.BLL.Referencias.CProducto

@{
    ViewBag.Title = "Edición de Producto";
    Layout = "~/Views/Shared/_Layout.cshtml";
    SelectListItem[] tmpTipoProducto = ViewBag.tmpTipoProducto;
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Edición de Producto</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.IdProducto)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IdProducto)
            @Html.ValidationMessageFor(model => model.IdProducto)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Descripcion)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Descripcion)
            @Html.ValidationMessageFor(model => model.Descripcion)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Abrev)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Abrev)
            @Html.ValidationMessageFor(model => model.Abrev)
        </div>

        
        <div class="editor-label">
            @Html.LabelFor(model => model.TipoProducto):
        </div>
        <div class="editor-field">
            @(Html.Telerik().DropDownListFor(model => model.TipoProducto.IdTipoProducto)
                        .BindTo(tmpTipoProducto.OrderBy(c => c.Text))
                        .HtmlAttributes(new { style = "width:200px" }))
            @Html.ValidationMessageFor(model => model.TipoProducto)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Tamano)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Tamano)
            @Html.ValidationMessageFor(model => model.Tamano)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Peso)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Peso)
            @Html.ValidationMessageFor(model => model.Peso)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Color)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Color)
            @Html.ValidationMessageFor(model => model.Color)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Estado)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Estado)
            @Html.ValidationMessageFor(model => model.Estado)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Usuario)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Usuario)
            @Html.ValidationMessageFor(model => model.Usuario)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Fecha)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Fecha)
            @Html.ValidationMessageFor(model => model.Fecha)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Volver a la Lista", "Index")
</div>
